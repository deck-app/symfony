name: Symfony 

on:
  schedule:
  - cron:  '30 5,17 * * *'
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:

  Nginx-php8-symfony:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Build the Docker image nginx php8 and symfony
      run: docker-compose -f "docker-compose.yml" up -d --build
      env:
        PHP_VERSION: "8.0"
        BACK_END: nginx
        APP_CODE_PATH_HOST: /tmp/symfony
        XDEBUG: true
        SYMFONY_INSTALL: false
        DISPLAY_PHPERROR: true
        APP_CODE_PATH_SYMFONY:  /var/www
        SERVER_ROOT:  /var/www/public
    - name: PHP version check
      run:  docker exec symfony_symfony_1 php -v
    - name: Mongodb driver check
      run:  docker exec symfony_symfony_1 php -m | grep mongo
    - name: Mysql Driver check
      run: docker exec symfony_symfony_1 php -m | grep mysqli
    - name: Composer test
      run: docker exec symfony_symfony_1 composer
    - name: Symfony Install
      run:  |
        docker exec symfony_symfony_1 ls -la /var/www
        docker exec symfony_symfony_1 rm -rf /var/www/vendor
        docker exec symfony_symfony_1 rm -rf /var/www/composer.json
        docker exec symfony_symfony_1 rm -rf /var/www/LICENSE
        docker exec symfony_symfony_1 symfony new .
        docker exec symfony_symfony_1 composer req --dev maker ormfixtures fakerphp/faker --no-cache
        docker exec symfony_symfony_1 composer update

    - name: Copy .env
      run: docker exec symfony_symfony_1 cp .env .env.local
    - name: Root Path change
      run:  |
        docker exec symfony_symfony_1 cp /app/default.conf /etc/nginx/conf.d/default.conf
        docker exec symfony_symfony_1 cp /app/annotations.yaml /var/www/config/routes/annotations.yaml
        docker exec symfony_symfony_1 cp /app/defaultController.php /var/www/src/Controller/defaultController.php
        docker exec symfony_symfony_1 pkill -9 php
        docker exec symfony_symfony_1 nginx -s reload
    - name: Root location
      run:  docker exec symfony_symfony_1 cat /etc/nginx/conf.d/default.conf
    - name: Symfony test
      run:  |
        curl -i http://localhost:5647/
    - name: Destroy container and file
      run:  docker-compose down
    - name: Deleted file
      run:  sudo rm -rf /tmp/symfony/

  # Nginx-php7-symfony:
  #   runs-on: ubuntu-latest
  #   steps:
  #   - uses: actions/checkout@v2
  #   - name: Build the Docker image nginx php7 and symfony
  #     run: docker-compose -f "docker-compose.yml" up -d --build
  #     env:
  #       PHP_VERSION: "7.4"
  #       BACK_END: nginx
  #       APP_CODE_PATH_HOST: /tmp/app
  #       XDEBUG: true
  #       SYMFONY_INSTALL: false
  #       DISPLAY_PHPERROR: true
  #       SERVER_ROOT:  /var/www/public
  #   - name: PHP version check
  #     run:  docker exec symfony_symfony_1 php -v
  #   - name: Mongodb driver check
  #     run:  docker exec symfony_symfony_1 php -m | grep mongo
  #   - name: Mysql Driver check
  #     run: docker exec symfony_symfony_1 php -m | grep mysqli
  #   - name: Composer test
  #     run: docker exec symfony_symfony_1 composer
  #   - name: Symfony Install
  #     run:  |
  #       docker exec symfony_symfony_1 symfony check:requirements
  #       docker exec symfony_symfony_1 symfony new .
  #       docker exec symfony_symfony_1 composer req --dev maker ormfixtures fakerphp/faker --no-cache
  #       docker exec symfony_symfony_1 composer req doctrine twig
  #   - name: Copy .env
  #     run: docker exec symfony_symfony_1 cp .env .env.local
  #   - name: Directory Permissions
  #     run:  docker exec symfony_symfony_1 chmod -R 777 storage
  #   - name: Root Path change
  #     run:  |
  #       docker exec symfony_symfony_1 cp /app/default.conf /etc/nginx/conf.d/default.conf
  #       docker exec symfony_symfony_1 pkill -9 php
  #       docker exec symfony_symfony_1 nginx -s reload

  #   - name: Symfony test
  #     run:  |
  #       curl -i http://localhost:5647/
    
  #   - name: Destroy container and file
  #     run:  |
  #       docker-compose down
  #       sudo rm -rf /tmp/app/
    
  # Apache-php8-symfony:
  #   runs-on: ubuntu-latest
  #   steps:
  #   - uses: actions/checkout@v2
  #   - name: Build the Docker image Apache php8 and symfony
  #     run: docker-compose -f "docker-compose.yml" up -d --build
  #     env:
  #       PHP_VERSION: "8.0"
  #       BACK_END: apache
  #       APP_CODE_PATH_HOST: /tmp/app
  #       XDEBUG: true
  #       SYMFONY_INSTALL: false
  #       DISPLAY_PHPERROR: true
  #       SERVER_ROOT:  /var/www/public
  #   - name: PHP version check
  #     run:  docker exec symfony_symfony_1 php -v
  #   - name: Mongodb driver check
  #     run:  docker exec symfony_symfony_1 php -m | grep mongo
  #   - name: Mysql Driver check
  #     run: docker exec symfony_symfony_1 php -m | grep mysqli
  #   - name: Composer test
  #     run: docker exec symfony_symfony_1 composer
  #   - name: Symfony Install
  #     run:  |
  #       docker exec symfony_symfony_1 symfony check:requirements
  #       docker exec symfony_symfony_1 symfony new .
  #       docker exec symfony_symfony_1 composer req --dev maker ormfixtures fakerphp/faker --no-cache
  #       docker exec symfony_symfony_1 composer req doctrine twig
  #   - name: Copy .env
  #     run: docker exec symfony_symfony_1 cp .env .env.local
  #   - name: Directory Permissions
  #     run:  docker exec symfony_symfony_1 chmod -R 777 storage
  #   - name: Root Path change
  #     run:  |
  #       docker exec laravel_laravel_1 cp /app/httpd.conf /etc/apache2/httpd.conf
  #       docker exec laravel_laravel_1 httpd -k graceful
  #   - name: Root path check
  #     run: |
  #       docker exec laravel_laravel_1 ls -la
  #       docker exec laravel_laravel_1 cat /etc/apache2/httpd.conf
  #   - name: Symfony test
  #     run:  |
  #       curl -i http://localhost:5647/
    
  #   - name: Destroy container and file
  #     run:  |
  #       docker-compose down
  #       sudo rm -rf /tmp/app/

  # Apache-php7-symfony:
  #   runs-on: ubuntu-latest
  #   steps:
  #   - uses: actions/checkout@v2
  #   - name: Build the Docker image Apache php8 and symfony
  #     run: docker-compose -f "docker-compose.yml" up -d --build
  #     env:
  #       PHP_VERSION: "7.4"
  #       BACK_END: apache
  #       APP_CODE_PATH_HOST: /tmp/app
  #       XDEBUG: true
  #       SYMFONY_INSTALL: false
  #       DISPLAY_PHPERROR: true
  #       SERVER_ROOT:  /var/www/public
  #   - name: PHP version check
  #     run:  docker exec symfony_symfony_1 php -v
  #   - name: Mongodb driver check
  #     run:  docker exec symfony_symfony_1 php -m | grep mongo
  #   - name: Mysql Driver check
  #     run: docker exec symfony_symfony_1 php -m | grep mysqli
  #   - name: Composer test
  #     run: docker exec symfony_symfony_1 composer
  #   - name: Symfony Install
  #     run:  |
  #       docker exec symfony_symfony_1 symfony check:requirements
  #       docker exec symfony_symfony_1 symfony new .
  #       docker exec symfony_symfony_1 composer req --dev maker ormfixtures fakerphp/faker --no-cache
  #       docker exec symfony_symfony_1 composer req doctrine twig
  #   - name: Copy .env
  #     run: docker exec symfony_symfony_1 cp .env .env.local
  #   - name: Directory Permissions
  #     run:  docker exec symfony_symfony_1 chmod -R 777 storage
  #   - name: Root Path change
  #     run:  |
  #       docker exec laravel_laravel_1 cp /app/httpd.conf /etc/apache2/httpd.conf
  #       docker exec laravel_laravel_1 httpd -k graceful
  #   - name: Root path check
  #     run: |
  #       docker exec laravel_laravel_1 ls -la
  #       docker exec laravel_laravel_1 cat /etc/apache2/httpd.conf
  #   - name: Symfony test
  #     run:  |
  #       curl -i http://localhost:5647/
  #   - name: Destroy container and file
  #     run:  |
  #       docker-compose down
  #       sudo rm -rf /tmp/app/