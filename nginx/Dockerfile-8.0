FROM ghcr.io/deck-app/nginx:v8.0
LABEL maintainer Naba Das <hello@get-deck.com>

# Persistent runtime dependencies
# Example RUN apk add --no-cache php8-openssl php8-sysvmsg php8-curl

RUN mkdir -p /app
RUN mkdir -p /var/preview
COPY default.conf /etc/nginx/conf.d/default.conf
COPY default.conf /app/default.conf
RUN wget -O /app/annotations.yaml https://raw.githubusercontent.com/deck-app/stack-preview-screen/main/symfony/annotations.yaml
RUN wget -O /app/defaultController.php https://raw.githubusercontent.com/deck-app/stack-preview-screen/main/symfony/defaultController.php
RUN wget -O /var/preview/index.html https://raw.githubusercontent.com/deck-app/stack-preview-screen/main/symfony/index.html
RUN sed -i "s#{SERVER_ROOT}#/var/preview#g" /etc/nginx/conf.d/default.conf
RUN sed -i "s#{SERVER_ROOT}#/var/www/public#g" /app/default.conf
RUN apk add --no-cache zip git 
RUN apk add php8-pdo php8-zip php8-pdo_mysql php8-intl

WORKDIR /var/www
#PHP display error enable or disable
ARG PHP_VERSION
COPY php.ini /etc/php8/php.ini
ARG DISPLAY_PHPERROR
RUN if [ ${DISPLAY_PHPERROR} = true ]; then \
sed -i "s#{DISPLAY}#On#g" /etc/php8/php.ini \
;else \
sed -i "s#{DISPLAY}#Off#g" /etc/php8/php.ini \
;fi

#Xdebug enable or disable
ARG XDEBUG
RUN if [ ${XDEBUG} = true ]; then \
apk add php8-pecl-xdebug \
&& echo "zend_extension=xdebug" >> /etc/php8/php.ini \
;fi

COPY docker-entrypoint.sh /docker-entrypoint.sh

## Linux permission issue
ARG USER_ID
ARG GROUP_ID
RUN apk --no-cache add shadow sudo
RUN usermod -u ${USER_ID} nobody && groupmod -g ${GROUP_ID} nobody

# sudo command without password
RUN echo "nobody ALL=(ALL) NOPASSWD: ALL" >> /etc/sudoers
RUN composer config --global process-timeout 6000

RUN curl -sS https://get.symfony.com/cli/installer | bash
RUN mv /root/.symfony5/bin/symfony /usr/local/bin/symfony
RUN git config --global user.email "hello@get-deck.com" \ 
    && git config --global user.name "Deck App"

RUN chmod +x /docker-entrypoint.sh

## nobody permission issue
RUN usermod --home /home nobody
COPY www.conf /etc/php7/php-fpm.d/www.conf
COPY nginx.conf /etc/nginx/nginx.conf
RUN touch /env
RUN chown -R nobody:nobody /env
RUN chown -R nobody:nobody /home
RUN chown -R nobody:nobody /sbin/
RUN chown -R nobody:nobody /var/preview/
RUN chown -R nobody:nobody /etc/php7/
RUN chown -R nobody:nobody /etc/service/
RUN chown -R nobody:nobody /var/run/
RUN chown -R nobody:nobody /var/log/
RUN chown -R nobody:nobody /var/lib/nginx
RUN chown -R nobody:nobody /etc/nginx
USER nobody
CMD /docker-entrypoint.sh & /sbin/runit-wrapper